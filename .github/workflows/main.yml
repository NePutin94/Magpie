# This is a basic workflow to help you get started with Actions

name: cpp-linter

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 cpp-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cpp-linter/cpp-linter-action@v1
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file
          
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
        version: 11
    
      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
      
      - name: Install dependencies
        run: |
            sudo apt update && sudo apt upgrade -y
            sudo apt install build-essential -y
            sudo apt-get install libglu1-mesa-dev freeglut3-dev mesa-common-dev
            sudo apt-get install libglfw3-dev
            sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
            git clone https://github.com/Dav1dde/glad.git
            cd glad
            cmake ./
            make
            sudo cp -a include /usr/local/
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    
      - name: Build with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{github.workspace}}/build
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          configure-options: -G Ninja
          build-type: ${{env.BUILD_TYPE}}
      - name: Test
        working-directory: ${{github.workspace}}/build/tests
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.BUILD_TYPE}}
      
      - name: Fail fast?!
        if: steps.linter.outputs.checks-failed > 0
        run: |
          echo "Some files failed the linting checks!"
        # for actual deployment
        # run: exit 1
